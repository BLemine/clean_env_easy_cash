const express=require("express");
const app=express();
let users=[
	{
	  id: 0,
	  login: 'Lemine',
	  password: '$^^$',
	  type:"recruiter",
	  email:"alpha@gmail.com"
	},
	{
	  id: 1,
	  login: 'Ilias',
	  password: '123',
	  type:"provider",
	  email:"beta@hotmail.com"
	},
	{
		id:2,
		login:'Gregoire',
		password:'รง1A2Z',
		type:"provider",
		email:"delta@outlook.com"
	}
  ];
let recruiterNotif=[
	{
		provider:"",
		recruiter:"",
		avatar:""
	}
];
let providerNotif=[
	{
		recruiter:"",
		provider:""
	}
];
let clickedPost={
	price:"",
	city:""
}
let messagesForRecruiter=[];
let messagesForCollector=[];
let posts=[];
const findUser=(name)=>{
	let exists=false;
	for(let i in users){
		if(users[i].login===name){
			exists=true;
		}
	}
	return exists;
}
//
let bodyParser = require('body-parser')
app.use(bodyParser.json())
app.use(bodyParser.urlencoded({ extended: true }))
//
app.use(function (req, res, next) {
	res.setHeader('Access-Control-Allow-Origin', '*');
	res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  	next();
});
app.get("/users", (req,res)=>{
	res.setHeader('Access-Control-Allow-Origin', '*');
	res.send(
		users
	);
});
app.get("/posts",(req,res)=>{
	res.setHeader('Access-Control-Allow-Origin', '*');
	res.send(
		[
			{
				date:new Date(),
				writer:"David",
				image:"Not yet",
				type:"sample garbages",
				delay:(2+"days")
			}
		]
	)
});
app.get("/messages/:user/:type",(req,res)=>{
	res.setHeader('Access-Control-Allow-Origin', '*');
	if(req.params.user==="Lemine" && req.params.type==="recruiter"){
		res.send(
			[
				{
					id: 1,
					mssg:{source:"Tomas",dest:"James"},
					primary: 'James',
					secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
					person: null,
				  },
				  {
					id: 2,
					mssg:{source:"Tomas",dest:"James"},
					primary: 'Renard',
					secondary: `Do you have a suggestion for a good present for John on his work
					  anniversary. I am really confused & would love your thoughts on it.`,
					person: null,
				  },
				  {
					id: 3,
					mssg:{source:"Tomas",dest:"James"},
					primary: 'Tomas',
					secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
					person: null,
				  }
				  
			]
		)
	}else if(req.params.user==="James" && req.params.type==="collector"){
		res.send(
			{
				id: 1,
				primary: 'Sherlock',
				secondary: 'I have the tickets to the ReactConf for this year.',
				person: null,
			  },
			  {
				id: 2,
				primary: "Evan",
				secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
				person: null,
			  },
			  {
				id: 3,
				primary: 'Steve',
				secondary: `Menus that are generated by the bottom app bar (such as a bottom
				  navigation drawer or overflow menu) open as bottom sheets at a higher elevation
				  than the bar.`,
				person: null,
			  },
			  {
				id: 4,
				primary: 'Kack',
				secondary: `Who wants to have a cookout this weekend? I just got some furniture
				  for my backyard and would love to fire up the grill.`,
				person: null,
			  }
		)
	}
	else
	res.send(" yew : "+req.params.user+", type : "+req.params.type);
});
app.get("/new/:username/:password/:type/:email",(req,res)=>{
	const lastId=users[users.length-1].id;
	if(findUser(req.params.username)){
		res.send("Sorry, users already exists");
	}else{
		users.push(
			{
				id:lastId+1,
				login:req.params.username,
				password:req.params.password,
				type:req.params.type,
				email:req.params.email
			}
		);
		res.send(
			"welcome new user : "+req.params.username+" with the id : "+users[users.length-1].id
		)
	} 
});
// same as .get("new/:username/:...")
app.post("/newUser",(req,res)=>{
	const lastId=users[users.length-1].id;
	if(findUser(req.body.username)){
		res.send("No");
	}else{
		users.push(
			{
				id:lastId+1,
				login:req.body.username,
				password:req.body.password,
				type:req.body.type,
				email:req.body.email
			}
		);
		res.send(users)
	}
});
//
app.get("/clickedPost/:recruiter",(req,res)=>{
	if(req.params.recruiter==="IBIS"){
		clickedPost={
			price:"700dhs",
			city:"Casablanca"
		}
	}
	else if(req.params.recruiter==="Alaoui"){
		clickedPost={
			price:"450dhs",
			city:"Oujda"
		}
	}
	res.send(clickedPost);
});
app.get("/",(req,res)=>{res.send("Micro-services Big Father");});
app.listen(1029,()=>{console.log("Connecting .."+1029);});
