import React,{useState,useEffect} from 'react';
import { makeStyles } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Typography from '@material-ui/core/Typography';
import Paper from '@material-ui/core/Paper';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListItemText from '@material-ui/core/ListItemText';
import ListSubheader from '@material-ui/core/ListSubheader';
import Avatar from '@material-ui/core/Avatar';
import service_recruiter from "../media/service_recruiter.jpg"
import garbage_collector from "../media/garbage_collector.jpg"
import {MessageContext} from "./Collector";
import ChatRoom from "./ChatRoom";
const axios = require("axios");
// messages from recruiters
const messages = [
  {
    id: 1,
    primary: 'Sherlock',
    secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: service_recruiter,
  },
  {
    id: 2,
    primary: 'ATLAS Hotel',
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: service_recruiter,
  },
  {
    id: 3,
    primary: 'Zouhair',
    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
    person: garbage_collector,
  },
  {
    id: 4,
    primary: 'IBIS',
    secondary: 'I have the tickets to the ReactConf for this year.',
    person: service_recruiter,
  },
  {
    id: 5,
    primary: "Zouhair",
    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
    person: service_recruiter,
  },
  {
    id: 6,
    primary: 'Discussion',
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: service_recruiter,
  },
  {
    id: 7,
    primary: 'Alaoui',
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: service_recruiter,
  },
];

const useStyles = makeStyles(theme => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paper: {
    paddingBottom: 50,
    height:541,
    marginTop:30,
    overflow:'auto',
  },
  list: {
    marginBottom: 0,
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  },
  appBar: {
    position:"relative",
    top: '-64px',
    bottom: 0,
    width:'100%',
    left:'0%'
  },
  grow: {
    flexGrow: 1,
  },
  fabButton: {
    position: 'absolute',
    zIndex: 1,
    top: 5,
    left: 0,
    right: 0,
    margin: '0 auto',
  },
}));
//
export default function SetChat() {
  const [chat,setChat]=useState(messages);
  const [privateChat,setPrivateChat]=useState(false);
  const [recruiters,setRecruiters]=useState([]);
  const classes = useStyles();
  //const mssgRef=React.createRef();
  //const paperRef=React.createRef();
  useEffect(()=>{
    axios.get("http://localhost:1029/messages/Lemine/recruiter")
      .then(function(response){
        console.log("Gotten messages : "+response.data)
      })
      .catch(function(error){
        console.log(error);
      });
  })
    const findRecruiter=(name)=>{
      let data=[]
      for(let i in messages){
        if(messages[i].primary==name){
          data.push(messages[i])
        }
      }
      return data;
    }
    const getChatRoom=(e)=>{
      /*console.log(e)
      console.log(e.target);*/
      if(e.target.children.length==2){
        const recruiter_name=e.target.children[0].firstChild.data;
        const recruiter_message=e.target.children[1].firstChild.data;
        console.log("clicked collector : "+recruiter_name);
        console.log("clicked message : "+recruiter_message);
        findRecruiter(recruiter_name);
        setRecruiters(findRecruiter(recruiter_name))
        setPrivateChat(true);
        //console.log(e.target.children)
      }
      /*if(e.target.children.length<3){
        console.log("parent "+e.target.parentNode)
      }*/
    }
    
  if(privateChat){
    return <ChatRoom chat={recruiters} />
  }
  else{
    return (
      <MessageContext.Consumer>
        {({ updateMessages }) => (
      <React.Fragment>
        <CssBaseline />
        <Paper square className={classes.paper}>
          <Typography className={classes.text} variant="h5" gutterBottom>
            Inbox
          </Typography>
          <List className={classes.list}>
            {chat.map(({ id, primary, secondary, person }) => (
              <React.Fragment key={id}>
                {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}
                {id === 3 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>}
                
                <ListItem button >
                  <ListItemAvatar >
                    <Avatar alt="Profile Picture" src={person} />
                  </ListItemAvatar>
                  <ListItemText onClick={getChatRoom} primary={primary} secondary={secondary} />
                </ListItem>
                
              </React.Fragment>
            ))}
            
          </List>
        </Paper>
        
        </React.Fragment>
        )}
      </MessageContext.Consumer>
    );
  }
}